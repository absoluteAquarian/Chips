// Compiled bytecode from schema-reference.txt

// .import System.Runtime
04 0E 53 79 73 74 65 6D 2E 52 75 6E 74 69 6D 65

// .extern System from System.Runtime
06 06 53 79 73 74 65 6D 0E 53 79 73 74 65 6D 2E 52 75 6E 74 69 6D 65

// .namespace Sample {
00 06 53 61 6D 70 6C 65 01

//	.type Program : class assembly static {
01 07 50 72 6F 67 72 61 6D 80 10 00 00 01

//		.method Main (args: string[]) public static -> void {
03 04 4D 61 69 6E 81 10 00 00 00 00 00 00 B7 01 00 02 01 04 61 72 67 73 00 00

//			; Print "Hello world!"
//			ldcs "Hello world!"
04 00 0C
//			prntl
4F

//			; Calculate something using &A, then print it
//			ldci 100
02 01 64 00 00 00
//			add 15
50 01 0F 00 00 00
//			div 3
53 01 03 00 00 00
//			mul 4
52 01 04 00 00 00
//			push &A
10 00
//			tostr
1E
//			push &S
10 02
//			ldcs "(100 + 15) / 3 * 4 = "
04 0C 15
//			cat
36
//			prntl
4F

//			; Calculate something using &I, then print it
//			ldcf 45.0f
03 00 00 00 34 42
//			subf 15.25f
71 00 00 00 74 41
//			; Multiplying by larger number type (double > float) will upcast to it
//			mulf 13.5
72 01 00 00 00 00 00 00 2B 40
//			push &I
10 01
//			tostr "N3"
2E 02 4E 33
//			push &S
10 02
//			ldcs "(45.0 - 15.25) * 13.5 = "
04 21 18
//			cat
36
//			prntl
4F

//			ret
4D

//		}
//	}
// }